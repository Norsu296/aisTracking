[{"/home/kuba/konkurs/front/rocket/src/index.js":"1","/home/kuba/konkurs/front/rocket/src/layouts/App.js":"2","/home/kuba/konkurs/front/rocket/src/layouts/Page.js":"3","/home/kuba/konkurs/front/rocket/src/components/Map.js":"4","/home/kuba/konkurs/front/rocket/src/components/Main.js":"5"},{"size":231,"mtime":1637958806435,"results":"6","hashOfConfig":"7"},{"size":343,"mtime":1637963121310,"results":"8","hashOfConfig":"7"},{"size":299,"mtime":1637959139371,"results":"9","hashOfConfig":"7"},{"size":2771,"mtime":1638471335797,"results":"10","hashOfConfig":"7"},{"size":2638,"mtime":1638465785052,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10arkrn",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/kuba/konkurs/front/rocket/src/index.js",[],["24","25"],"/home/kuba/konkurs/front/rocket/src/layouts/App.js",[],"/home/kuba/konkurs/front/rocket/src/layouts/Page.js",[],"/home/kuba/konkurs/front/rocket/src/components/Map.js",[],"/home/kuba/konkurs/front/rocket/src/components/Main.js",["26"],"import React, { useState, useEffect } from 'react'\nimport Map from './Map'\nimport L from 'leaflet';\nimport 'leaflet-geometryutil';\n\nconst Main = () => {\n\n    const API_URL = \"http://localhost:8080\"\n\n    const [range, setRange] = useState(0);\n    const [ships, setShips] = useState([]);\n    const [bases, setBases] = useState([]);\n    const [rockets, setRockets] = useState([]);\n\n    const handleRange = (e) => {\n        setRange(e.target.value)\n    }\n    const handleReset = () => {\n        window.location.reload(false);\n    }\n    useEffect(() => {\n        loadShips();\n        loadBases();\n        loadRockets();\n    }, [])\n\n    const loadShips = () => {\n        fetch(API_URL+\"/ships\")\n        .then(results => results.json())\n        .then(data => {\n            console.log(data);\n            setShips(data)\n        })\n    }\n    const loadBases = () => {\n        fetch(API_URL+\"/bases\")\n        .then(results => results.json())\n        .then(data => {\n            console.log(data);\n            setBases(data)\n        })\n    }\n    const loadRockets = () => {\n        fetch(API_URL+\"/rockets\")\n        .then(results => results.json())\n        .then(data => {\n            console.log(data);\n            setRockets(data)\n        })\n    }\n\n    return(\n        <div className=\"row \">\n            <div className=\"col-md-9 map\">\n                <Map shipPositions={ships} range={range} basePositions={bases}></Map>\n            </div>\n            <div className=\"col-md-3\">\n                        <form className=\"row g-3\">\n                            <div className=\"col-md-9\">\n                                <select className=\"form-select\" onChange={handleRange}>\n                                <option selected disabled value=\"\">Wybierz rodzaj uzbrojenia</option>\n                                        {rockets.map(item => \n                                             <option key={item.id} value={item.range}>{item.name}</option>)};\n                                </select>\n                                <div class=\"alert alert-secondary\" role=\"alert\">\n                                    Kliknij na statek aby zobaczyć możliwy zasięg\n                                    <p>\n                                        Kliknij ponownie aby sprawdzić zagrożenia\n                                    </p>\n                                </div>\n                                <button type=\"button\" class=\"btn col-md-3 btn-outline-dark\" onClick={handleReset}>Reset</button>\n                            </div>\n                            \n                        </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Main;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":8,"nodeType":"33","messageId":"34","endLine":3,"endColumn":9},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'L' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]