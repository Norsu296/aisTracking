{"ast":null,"code":"import _slicedToArray from \"/home/kuba/konkurs/front/rocket/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/kuba/konkurs/front/rocket/src/components/Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet-geometryutil';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport myIcon from '../images/shipColor.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar DefaultIcon = L.icon({\n  iconSize: [26, 36],\n  iconAnchor: [13, 36],\n  iconUrl: '../images/shi.png',\n  shadowUrl: iconShadow\n});\nvar shipIcon = new L.icon({\n  iconUrl: myIcon,\n  iconSize: [30, 30]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nvar Map = function Map(props) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      distance = _useState2[0],\n      setDistance = _useState2[1];\n\n  function getDistance(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = toRad(lat2 - lat1);\n    var dLon = toRad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d;\n  }\n\n  function toRad(degree) {\n    return degree * Math.PI / 180;\n  }\n\n  function findBasesAtRisk() {\n    console.log(distance);\n    console.log(props.range);\n    var bases = 0;\n\n    for (var i = 0; i < distance.length; i++) {\n      if (parseFloat(props.range).toFixed(2) >= distance[i]) {\n        console.log(parseFloat(props.range).toFixed(2));\n        bases = bases + 1;\n      }\n    }\n\n    console.log(bases);\n  }\n\n  var Ships = props.shipPositions.map(function (ship) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [ship.positionX, ship.positionY],\n      icon: shipIcon,\n      eventHandlers: {\n        click: function click(e) {\n          /*#__PURE__*/\n          _jsxDEV(Circle, {\n            center: [ship.positionX, ship.positionY],\n            radius: props.range,\n            pathOptions: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, _this);\n\n          var distances = [];\n\n          for (var i = 0; i < props.basePositions.length; i++) {\n            distances.push(getDistance(e.latlng.lat, e.latlng.lng, props.basePositions[i].positionX, props.basePositions[i].positionY));\n            setDistance(distances);\n          }\n\n          findBasesAtRisk();\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Circle, {\n        center: [ship.positionX, ship.positionY],\n        radius: props.range,\n        pathOptions: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, _this);\n  });\n  var Bases = props.basePositions.map(function (base) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [base.positionX, base.positionY],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Military base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 3\n      }, _this), Ships, Bases]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HALO HALO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 2\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Map, \"6/HF/8Es0/k+ZIPfWZxP86xBZMI=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/kuba/konkurs/front/rocket/src/components/Map.js"],"names":["React","useState","L","MapContainer","TileLayer","Marker","Popup","Circle","iconShadow","myIcon","DefaultIcon","icon","iconSize","iconAnchor","iconUrl","shadowUrl","shipIcon","prototype","options","Map","props","distance","setDistance","getDistance","lat1","lon1","lat2","lon2","R","dLat","toRad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","degree","PI","findBasesAtRisk","console","log","range","bases","i","length","parseFloat","toFixed","Ships","shipPositions","map","ship","positionX","positionY","click","e","color","distances","basePositions","push","latlng","lat","lng","Bases","base"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport L from 'leaflet';\nimport 'leaflet-geometryutil';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport myIcon from '../images/shipColor.png'\n\n\nlet DefaultIcon = L.icon({\n  iconSize: [26,36],\n  iconAnchor: [13,36],\n  iconUrl: '../images/shi.png',\n  shadowUrl: iconShadow,\n});\n\nconst shipIcon = new L.icon({\n  iconUrl: myIcon,\n  iconSize: [30, 30]\n})\nL.Marker.prototype.options.icon = DefaultIcon;\n\n\nconst Map = (props) => {\n\n  const [distance, setDistance] = useState([]);\n\nfunction getDistance(lat1, lon1, lat2, lon2){\n  let R = 6371; \n  let dLat = toRad(lat2-lat1);\n  let dLon = toRad(lon2-lon1); \n  let a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n          Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * \n          Math.sin(dLon/2) * Math.sin(dLon/2); \n  let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n  let d = R * c;\n  return d;\n}\nfunction toRad(degree) {\n  return degree*Math.PI/180;\n}\n\nfunction findBasesAtRisk() {\n  console.log(distance);\n  console.log(props.range);\n  let bases = 0;\n  for(let i = 0; i < distance.length; i++){\n    if(parseFloat(props.range).toFixed(2) >= distance[i]){\n      console.log(parseFloat(props.range).toFixed(2));\n      bases = bases + 1;\n    }\n  }\n  console.log(bases);\n}\n\n\n  const Ships = props.shipPositions.map(ship => (\n    <Marker position={[ship.positionX, ship.positionY]} icon={shipIcon} eventHandlers={{\n      click: (e) => {\n        <Circle center={[ship.positionX, ship.positionY]} radius={props.range} pathOptions={{color: 'red'}}></Circle>\n        let distances = []\n        for(let i = 0; i< props.basePositions.length ; i++){\n          distances.push(getDistance(e.latlng.lat, e.latlng.lng, props.basePositions[i].positionX, props.basePositions[i].positionY));\n          setDistance(distances);\n        }\n        findBasesAtRisk();            \n      }\n    }}>\n    \n        <Circle center={[ship.positionX, ship.positionY]} radius={props.range} pathOptions={{color: 'red'}}></Circle>\n     \n    </Marker>\n  )) \n\n  const Bases = props.basePositions.map(base => (\n    <Marker position={[base.positionX, base.positionY]}>\n    <Popup>\n      <div>\n          Military base\n      </div>\n    \n    </Popup>\n  </Marker>\n  ))\n\n  return (\n\n    \n    <>\n    <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\n  <TileLayer\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n  {Ships}\n  {Bases}\n</MapContainer>\n <h1>HALO HALO</h1>\n </>\n  );\n  \n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}