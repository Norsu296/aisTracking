{"ast":null,"code":"import _slicedToArray from \"/home/kuba/konkurs/front/rocket/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/kuba/konkurs/front/rocket/src/components/Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet-geometryutil';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Circle, useMapEvents } from 'react-leaflet';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport vesselIcon from '../images/shipColor.png';\nimport eagleIcon from '../images/base.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar shipIcon = new L.icon({\n  iconUrl: vesselIcon,\n  iconSize: [30, 30]\n});\nvar baseIcon = new L.icon({\n  iconUrl: eagleIcon,\n  iconSize: [40, 40]\n});\n\nvar Map = function Map(props) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      distance = _useState2[0],\n      setDistance = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      basesAtRisk = _useState4[0],\n      setBasesAtRisk = _useState4[1];\n\n  function getDistance(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = toRad(lat2 - lat1);\n    var dLon = toRad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d;\n  }\n\n  function toRad(degree) {\n    return degree * Math.PI / 180;\n  }\n\n  function findBasesAtRisk() {\n    console.log(distance);\n    console.log(props.range / 100);\n    var bases = 0;\n\n    for (var i = 0; i < distance.length; i++) {\n      if (props.range / 1000 >= distance[i]) {\n        console.log(typeof (props.range / 1000) + '>=' + typeof distance[i]);\n        console.log(props.range / 1000 + ' ' + distance[i]);\n        bases = bases + 1;\n      }\n    }\n\n    setBasesAtRisk(bases);\n    console.log(bases);\n  }\n\n  var Ships = props.shipPositions.map(function (ship) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [ship.positionX, ship.positionY],\n      icon: shipIcon,\n      eventHandlers: {\n        click: function click(e) {\n          var distances = [];\n\n          for (var i = 0; i < props.basePositions.length; i++) {\n            distances.push(getDistance(e.latlng.lat, e.latlng.lng, props.basePositions[i].positionX, props.basePositions[i].positionY));\n            setDistance(distances);\n          }\n\n          findBasesAtRisk();\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Nazwa: Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum, voluptate?\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Zasi\\u0119g: Lorem ipsum dolor sit amet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Circle, {\n          center: [ship.positionX, ship.positionY],\n          radius: props.range,\n          pathOptions: {\n            color: 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, _this);\n  });\n  var Bases = props.basePositions.map(function (base) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [base.positionX, base.positionY],\n      icon: baseIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: base.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [63.460798, 10.254517],\n      zoom: 10,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this), Ships, Bases]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"\".concat(basesAtRisk > 0 ? '' : 'd-none ', \"alert alert-danger d-flex justify-content-center shadow\"),\n      children: [\"Potencjalnie zagro\\u017Cone cele: \", basesAtRisk]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Map, \"TgPksy27FTexuFrQNqJ5CPYg76c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/kuba/konkurs/front/rocket/src/components/Map.js"],"names":["React","useState","L","MapContainer","TileLayer","Marker","Popup","Circle","useMapEvents","iconShadow","vesselIcon","eagleIcon","shipIcon","icon","iconUrl","iconSize","baseIcon","Map","props","distance","setDistance","basesAtRisk","setBasesAtRisk","getDistance","lat1","lon1","lat2","lon2","R","dLat","toRad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","degree","PI","findBasesAtRisk","console","log","range","bases","i","length","Ships","shipPositions","map","ship","positionX","positionY","click","e","distances","basePositions","push","latlng","lat","lng","color","Bases","base","name"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport L from 'leaflet';\nimport 'leaflet-geometryutil';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Circle, useMapEvents } from 'react-leaflet'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport vesselIcon from '../images/shipColor.png'\nimport eagleIcon from '../images/base.png'\n\n\nconst shipIcon = new L.icon({\n  iconUrl: vesselIcon,\n  iconSize: [30, 30]\n})\nconst baseIcon = new L.icon({\n  iconUrl: eagleIcon,\n  iconSize: [40, 40]\n})\n\nconst Map = (props) => {\n\n  const [distance, setDistance] = useState([]);\n  const [basesAtRisk, setBasesAtRisk] = useState(0);\nfunction getDistance(lat1, lon1, lat2, lon2){\n  let R = 6371; \n  let dLat = toRad(lat2-lat1);\n  let dLon = toRad(lon2-lon1); \n  let a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n          Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * \n          Math.sin(dLon/2) * Math.sin(dLon/2); \n  let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n  let d = R * c;\n  return d;\n}\nfunction toRad(degree) {\n  return degree*Math.PI/180;\n}\n\nfunction findBasesAtRisk() {\n  console.log(distance);\n  console.log(props.range/100);\n  let bases = 0;\n  for(let i = 0; i < distance.length; i++){\n    if(props.range/1000 >= distance[i]){\n      console.log(typeof(props.range/1000)+'>='+typeof(distance[i]));\n      console.log(props.range/1000+' '+distance[i]);\n      bases = bases + 1;\n    }\n  }\n  setBasesAtRisk(bases);\n  console.log(bases);\n}\n\n\n  const Ships = props.shipPositions.map(ship => (\n    <Marker position={[ship.positionX, ship.positionY]} icon={shipIcon} eventHandlers={{\n      click: (e) => {\n        let distances = []\n        for(let i = 0; i< props.basePositions.length ; i++){\n          distances.push(getDistance(e.latlng.lat, e.latlng.lng, props.basePositions[i].positionX, props.basePositions[i].positionY));\n          setDistance(distances);\n        }\n        findBasesAtRisk();\n                  \n      }\n    }}>\n      <Popup>\n        <div>\n          Nazwa: Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum, voluptate?\n          <p>Zasięg: Lorem ipsum dolor sit amet.</p>\n        </div>\n        <Circle center={[ship.positionX, ship.positionY]} radius={props.range} pathOptions={{color: 'red'}}></Circle>  \n      </Popup>\n    </Marker>\n  )) \n\n  const Bases = props.basePositions.map(base => (\n    <Marker position={[base.positionX, base.positionY]} icon={baseIcon}>\n    <Popup>\n      <div>\n         {base.name}\n      </div>\n    </Popup>\n  </Marker>\n  ))\n\n  return (\n    <>\n      <MapContainer center={[63.460798, 10.254517]} zoom={10} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n          {Ships}\n          {Bases}\n          \n      </MapContainer>\n      <h1 className={`${basesAtRisk > 0 ? '' : 'd-none '}alert alert-danger d-flex justify-content-center shadow`}>\n        Potencjalnie zagrożone cele: {basesAtRisk}\n      </h1>\n    </>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}