{"ast":null,"code":"var _jsxFileName = \"/home/kuba/konkurs/front/rocket/src/components/Map.js\",\n    _this = this;\n\nimport React from 'react';\nimport L from 'leaflet';\nimport 'leaflet-geometryutil';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport myIcon from '../images/shipColor.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DefaultIcon = L.icon({\n  iconSize: [26, 36],\n  iconAnchor: [13, 36],\n  iconUrl: '../images/shi.png',\n  shadowUrl: iconShadow\n});\nvar shipIcon = new L.icon({\n  iconUrl: myIcon,\n  iconSize: [30, 30]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction getDistance(origin, destination) {\n  var lon1 = toRadian(origin[1]);\n  var lat1 = toRadian(origin[0]);\n  var lon2 = toRadian(destination[1]);\n  var lat2 = toRadian(destination[0]);\n  var deltaLat = lat2 - lat1;\n  var deltaLon = lon2 - lon1;\n  var a = Math.pow(Math.sin(deltaLat / 2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n  var c = 2 * Math.asin(Math.sqrt(a));\n  var EARTH_RADIUS = 6371;\n  return c * EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n  return degree * Math.PI / 180;\n}\n\nvar Map = function Map(props) {\n  var Ships = props.shipPositions.map(function (ship) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [ship.positionX, ship.positionY],\n      icon: shipIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Nazwa: Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum, voluptate?\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Zasi\\u0119g: Lorem ipsum dolor sit amet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, _this), console.log(props.basePositions), /*#__PURE__*/_jsxDEV(Circle, {\n          center: [ship.positionX, ship.positionY],\n          radius: props.range,\n          pathOptions: {\n            color: 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, _this);\n  });\n  var Bases = props.basePositions.map(function (base) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [base.positionX, base.positionY],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Military base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [51.505, -0.09],\n    zoom: 13,\n    scrollWheelZoom: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, _this), Ships, Bases]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/kuba/konkurs/front/rocket/src/components/Map.js"],"names":["React","L","MapContainer","TileLayer","Marker","Popup","Circle","iconShadow","myIcon","DefaultIcon","icon","iconSize","iconAnchor","iconUrl","shadowUrl","shipIcon","prototype","options","getDistance","origin","destination","lon1","toRadian","lat1","lon2","lat2","deltaLat","deltaLon","a","Math","pow","sin","cos","c","asin","sqrt","EARTH_RADIUS","degree","PI","Map","props","Ships","shipPositions","map","ship","positionX","positionY","console","log","basePositions","range","color","Bases","base"],"mappings":"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","sourcesContent":["import React from 'react'\nimport L from 'leaflet';\nimport 'leaflet-geometryutil';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport myIcon from '../images/shipColor.png'\n\nlet DefaultIcon = L.icon({\n  iconSize: [26,36],\n  iconAnchor: [13,36],\n  iconUrl: '../images/shi.png',\n  shadowUrl: iconShadow,\n});\n\nconst shipIcon = new L.icon({\n  iconUrl: myIcon,\n  iconSize: [30, 30]\n})\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction getDistance(origin, destination){\n  let lon1 = toRadian(origin[1]);\n  let lat1 = toRadian(origin[0]);\n  let lon2 = toRadian(destination[1]);\n  let lat2 = toRadian(destination[0]);\n\n  let deltaLat = lat2 - lat1;\n  let deltaLon = lon2 - lon1;\n\n  let a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n  let c = 2 * Math.asin(Math.sqrt(a));\n  let EARTH_RADIUS = 6371;\n  return c * EARTH_RADIUS * 1000;\n}\nfunction toRadian(degree) {\n  return degree*Math.PI/180;\n}\nconst Map = (props) => {\n\n  const Ships = props.shipPositions.map(ship => (\n    <Marker position={[ship.positionX, ship.positionY]} icon={shipIcon}>\n      <Popup>\n        <div>\n          Nazwa: Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum, voluptate?\n          <p>ZasiÄ™g: Lorem ipsum dolor sit amet.</p>\n        </div>\n        {console.log(props.basePositions)}\n        <Circle center={[ship.positionX, ship.positionY]} radius={props.range} pathOptions={{color: 'red'}}></Circle>\n      </Popup>\n    </Marker>\n  )) \n\n  const Bases = props.basePositions.map(base => (\n    <Marker position={[base.positionX, base.positionY]}>\n    <Popup>\n      <div>\n          Military base\n      </div>\n    \n    </Popup>\n  </Marker>\n  ))\n\n  return (\n    <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\n  <TileLayer\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n  {Ships}\n  {Bases}\n</MapContainer>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}